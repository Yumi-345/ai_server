# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from proto import global_pb2 as proto_dot_global__pb2
from proto import task_pb2 as proto_dot_task__pb2


class TaskServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Reset = channel.unary_unary(
                '/proto.TaskService/Reset',
                request_serializer=proto_dot_task__pb2.TaskReq.SerializeToString,
                response_deserializer=proto_dot_global__pb2.CommRes.FromString,
                )
        self.Enable = channel.unary_unary(
                '/proto.TaskService/Enable',
                request_serializer=proto_dot_task__pb2.AlgConfig.SerializeToString,
                response_deserializer=proto_dot_global__pb2.CommRes.FromString,
                )
        self.Disable = channel.unary_unary(
                '/proto.TaskService/Disable',
                request_serializer=proto_dot_task__pb2.AlgConfig.SerializeToString,
                response_deserializer=proto_dot_global__pb2.CommRes.FromString,
                )
        self.Notify = channel.unary_stream(
                '/proto.TaskService/Notify',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=proto_dot_task__pb2.TaskNotify.FromString,
                )
        self.GetRunningState = channel.unary_unary(
                '/proto.TaskService/GetRunningState',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=proto_dot_task__pb2.RunningState.FromString,
                )


class TaskServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Reset(self, request, context):
        """重置任务
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Enable(self, request, context):
        """启用算法
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Disable(self, request, context):
        """禁用算法
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Notify(self, request, context):
        """数据回调
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRunningState(self, request, context):
        """获取运行状态
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TaskServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Reset': grpc.unary_unary_rpc_method_handler(
                    servicer.Reset,
                    request_deserializer=proto_dot_task__pb2.TaskReq.FromString,
                    response_serializer=proto_dot_global__pb2.CommRes.SerializeToString,
            ),
            'Enable': grpc.unary_unary_rpc_method_handler(
                    servicer.Enable,
                    request_deserializer=proto_dot_task__pb2.AlgConfig.FromString,
                    response_serializer=proto_dot_global__pb2.CommRes.SerializeToString,
            ),
            'Disable': grpc.unary_unary_rpc_method_handler(
                    servicer.Disable,
                    request_deserializer=proto_dot_task__pb2.AlgConfig.FromString,
                    response_serializer=proto_dot_global__pb2.CommRes.SerializeToString,
            ),
            'Notify': grpc.unary_stream_rpc_method_handler(
                    servicer.Notify,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=proto_dot_task__pb2.TaskNotify.SerializeToString,
            ),
            'GetRunningState': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRunningState,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=proto_dot_task__pb2.RunningState.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'proto.TaskService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class TaskService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Reset(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/proto.TaskService/Reset',
            proto_dot_task__pb2.TaskReq.SerializeToString,
            proto_dot_global__pb2.CommRes.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Enable(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/proto.TaskService/Enable',
            proto_dot_task__pb2.AlgConfig.SerializeToString,
            proto_dot_global__pb2.CommRes.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Disable(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/proto.TaskService/Disable',
            proto_dot_task__pb2.AlgConfig.SerializeToString,
            proto_dot_global__pb2.CommRes.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Notify(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/proto.TaskService/Notify',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            proto_dot_task__pb2.TaskNotify.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetRunningState(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/proto.TaskService/GetRunningState',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            proto_dot_task__pb2.RunningState.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
