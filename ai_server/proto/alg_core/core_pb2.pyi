"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file

@Author: AlfredNG
@Date: 2024-02-03 10:43:06
@Description: about the alg channel api
@Copyright: Copyright (c) 2024-Present AVCIT
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import proto.alg_core.common_pb2
import proto.alg_core.picture_pb2
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _TaskTypeEnum:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _TaskTypeEnumEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_TaskTypeEnum.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    TASK_TYPE_UNKNOW: _TaskTypeEnum.ValueType  # 0
    TASK_TYPE_CAR: _TaskTypeEnum.ValueType  # 1
    TASK_TYPE_PERSON: _TaskTypeEnum.ValueType  # 2
    TASK_TYPE_ENVIRONMENT: _TaskTypeEnum.ValueType  # 3
    TASK_TYPE_VEHICLE: _TaskTypeEnum.ValueType  # 4
    TASK_TYPE_COLLECT: _TaskTypeEnum.ValueType  # 5
    """人车非检测抓拍"""
    TASK_TYPE_PASSENGER_COUNT: _TaskTypeEnum.ValueType  # 6
    """旅客计算"""
    TASK_TYPE_EBIKE_LADDER: _TaskTypeEnum.ValueType  # 7
    """电动车入楼梯"""
    TASK_TYPE_DOG_WALK: _TaskTypeEnum.ValueType  # 8
    """遛狗不牵绳"""
    TASK_TYPE_NONCAR_OCCUPY: _TaskTypeEnum.ValueType  # 9
    """非机动车占道检测"""
    TASK_TYPE_SHIP_OBJCAP: _TaskTypeEnum.ValueType  # 10
    """船只检测"""
    TASK_TYPE_PERSON_OBJCAP: _TaskTypeEnum.ValueType  # 11
    """行人检测"""
    TASK_TYPE_CAR_OBJCAP: _TaskTypeEnum.ValueType  # 12
    """机动车检测"""
    TASK_TYPE_NONCAR_OBJCAP: _TaskTypeEnum.ValueType  # 13
    """驾驶非机动车检测"""
    TASK_TYPE_RUBBISH_HEAP_DET: _TaskTypeEnum.ValueType  # 14
    """垃圾堆放检测"""
    TASK_TYPE_RUBBISH_OVERFLOW_DET: _TaskTypeEnum.ValueType  # 15
    """垃圾通溢满检测"""
    TASK_TYPE_PERSON_WANDER: _TaskTypeEnum.ValueType  # 16
    """徘徊检测"""
    TASK_TYPE_RIDE: _TaskTypeEnum.ValueType  # 17
    """骑行检测"""
    TASK_TYPE_CROWD_DET: _TaskTypeEnum.ValueType  # 18
    """人群聚集检测"""
    TASK_TYPE_FALLDOWN_DET: _TaskTypeEnum.ValueType  # 19
    """跌倒检测"""
    TASK_TYPE_SMOKE_DET: _TaskTypeEnum.ValueType  # 20
    """浓烟检测"""
    TASK_TYPE_FIRE_DET: _TaskTypeEnum.ValueType  # 21
    """明火检测"""
    TASK_TYPE_HELMET_DET_NOTRACK: _TaskTypeEnum.ValueType  # 22
    """未佩戴安全帽检测"""
    TASK_TYPE_VEST_DET_NOTRACK: _TaskTypeEnum.ValueType  # 23
    """未穿工衣检测"""
    TASK_TYPE_PERSON_BREAKIN_NOTRACK: _TaskTypeEnum.ValueType  # 24
    """区域入侵检测"""
    TASK_TYPE_FACEMASK_DET_NOTRACK: _TaskTypeEnum.ValueType  # 25
    """未佩戴戴口罩检测"""
    TASK_TYPE_REFLECT_DET_NOTRACK: _TaskTypeEnum.ValueType  # 26
    """未穿戴反光衣检测"""

class TaskTypeEnum(_TaskTypeEnum, metaclass=_TaskTypeEnumEnumTypeWrapper): ...

TASK_TYPE_UNKNOW: TaskTypeEnum.ValueType  # 0
TASK_TYPE_CAR: TaskTypeEnum.ValueType  # 1
TASK_TYPE_PERSON: TaskTypeEnum.ValueType  # 2
TASK_TYPE_ENVIRONMENT: TaskTypeEnum.ValueType  # 3
TASK_TYPE_VEHICLE: TaskTypeEnum.ValueType  # 4
TASK_TYPE_COLLECT: TaskTypeEnum.ValueType  # 5
"""人车非检测抓拍"""
TASK_TYPE_PASSENGER_COUNT: TaskTypeEnum.ValueType  # 6
"""旅客计算"""
TASK_TYPE_EBIKE_LADDER: TaskTypeEnum.ValueType  # 7
"""电动车入楼梯"""
TASK_TYPE_DOG_WALK: TaskTypeEnum.ValueType  # 8
"""遛狗不牵绳"""
TASK_TYPE_NONCAR_OCCUPY: TaskTypeEnum.ValueType  # 9
"""非机动车占道检测"""
TASK_TYPE_SHIP_OBJCAP: TaskTypeEnum.ValueType  # 10
"""船只检测"""
TASK_TYPE_PERSON_OBJCAP: TaskTypeEnum.ValueType  # 11
"""行人检测"""
TASK_TYPE_CAR_OBJCAP: TaskTypeEnum.ValueType  # 12
"""机动车检测"""
TASK_TYPE_NONCAR_OBJCAP: TaskTypeEnum.ValueType  # 13
"""驾驶非机动车检测"""
TASK_TYPE_RUBBISH_HEAP_DET: TaskTypeEnum.ValueType  # 14
"""垃圾堆放检测"""
TASK_TYPE_RUBBISH_OVERFLOW_DET: TaskTypeEnum.ValueType  # 15
"""垃圾通溢满检测"""
TASK_TYPE_PERSON_WANDER: TaskTypeEnum.ValueType  # 16
"""徘徊检测"""
TASK_TYPE_RIDE: TaskTypeEnum.ValueType  # 17
"""骑行检测"""
TASK_TYPE_CROWD_DET: TaskTypeEnum.ValueType  # 18
"""人群聚集检测"""
TASK_TYPE_FALLDOWN_DET: TaskTypeEnum.ValueType  # 19
"""跌倒检测"""
TASK_TYPE_SMOKE_DET: TaskTypeEnum.ValueType  # 20
"""浓烟检测"""
TASK_TYPE_FIRE_DET: TaskTypeEnum.ValueType  # 21
"""明火检测"""
TASK_TYPE_HELMET_DET_NOTRACK: TaskTypeEnum.ValueType  # 22
"""未佩戴安全帽检测"""
TASK_TYPE_VEST_DET_NOTRACK: TaskTypeEnum.ValueType  # 23
"""未穿工衣检测"""
TASK_TYPE_PERSON_BREAKIN_NOTRACK: TaskTypeEnum.ValueType  # 24
"""区域入侵检测"""
TASK_TYPE_FACEMASK_DET_NOTRACK: TaskTypeEnum.ValueType  # 25
"""未佩戴戴口罩检测"""
TASK_TYPE_REFLECT_DET_NOTRACK: TaskTypeEnum.ValueType  # 26
"""未穿戴反光衣检测"""
global___TaskTypeEnum = TaskTypeEnum

class _EventType:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _EventTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_EventType.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    EVENT_TYPE_UNKNOW: _EventType.ValueType  # 0
    EVENT_TYPE_PIC: _EventType.ValueType  # 1
    """图片事件"""

class EventType(_EventType, metaclass=_EventTypeEnumTypeWrapper): ...

EVENT_TYPE_UNKNOW: EventType.ValueType  # 0
EVENT_TYPE_PIC: EventType.ValueType  # 1
"""图片事件"""
global___EventType = EventType

@typing_extensions.final
class AddTaskReq(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SERVICE_ID_FIELD_NUMBER: builtins.int
    DEV_ID_FIELD_NUMBER: builtins.int
    ROOT_FIELD_NUMBER: builtins.int
    MODEL_FILES_FIELD_NUMBER: builtins.int
    service_id: builtins.int
    dev_id: builtins.int
    """显卡ID"""
    root: builtins.str
    """工作目录"""
    @property
    def model_files(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """模型路径"""
    def __init__(
        self,
        *,
        service_id: builtins.int = ...,
        dev_id: builtins.int = ...,
        root: builtins.str = ...,
        model_files: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["dev_id", b"dev_id", "model_files", b"model_files", "root", b"root", "service_id", b"service_id"]) -> None: ...

global___AddTaskReq = AddTaskReq

@typing_extensions.final
class RemoveTaskReq(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SERVICE_ID_FIELD_NUMBER: builtins.int
    service_id: builtins.int
    def __init__(
        self,
        *,
        service_id: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["service_id", b"service_id"]) -> None: ...

global___RemoveTaskReq = RemoveTaskReq

@typing_extensions.final
class EnableChannelReq(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CHANNEL_ID_FIELD_NUMBER: builtins.int
    CHANNEL_NAME_FIELD_NUMBER: builtins.int
    CHANNEL_URL_FIELD_NUMBER: builtins.int
    channel_id: builtins.int
    channel_name: builtins.str
    channel_url: builtins.str
    def __init__(
        self,
        *,
        channel_id: builtins.int = ...,
        channel_name: builtins.str = ...,
        channel_url: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["channel_id", b"channel_id", "channel_name", b"channel_name", "channel_url", b"channel_url"]) -> None: ...

global___EnableChannelReq = EnableChannelReq

@typing_extensions.final
class DisableChannelReq(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CHANNEL_ID_FIELD_NUMBER: builtins.int
    channel_id: builtins.int
    def __init__(
        self,
        *,
        channel_id: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["channel_id", b"channel_id"]) -> None: ...

global___DisableChannelReq = DisableChannelReq

@typing_extensions.final
class ChanServiceConfig(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TASK_TYPE_FIELD_NUMBER: builtins.int
    ROI_FIELD_NUMBER: builtins.int
    BOX_MIN_W_FIELD_NUMBER: builtins.int
    BOX_MIN_H_FIELD_NUMBER: builtins.int
    DET_THRESHOLD_FIELD_NUMBER: builtins.int
    MATCH_THRESHOLD_FIELD_NUMBER: builtins.int
    ALARM_INTERVAL_FIELD_NUMBER: builtins.int
    PGIE_INTEVAL_FIELD_NUMBER: builtins.int
    WINDOW_LEN_FIELD_NUMBER: builtins.int
    WINDOW_HIT_FIELD_NUMBER: builtins.int
    CROWD_NUM_THRESHOLD_FIELD_NUMBER: builtins.int
    FACEQA_THRESHOLD_FIELD_NUMBER: builtins.int
    task_type: global___TaskTypeEnum.ValueType
    """任务类型"""
    @property
    def roi(self) -> proto.alg_core.common_pb2.Area:
        """roi config"""
    box_min_w: builtins.int
    """目标框最小宽度"""
    box_min_h: builtins.int
    """目标框最小高度"""
    det_threshold: builtins.float
    """检测阈值"""
    match_threshold: builtins.float
    """比对阈值"""
    alarm_interval: builtins.int
    """报警间隔, 上报一次后, 间隔alarmInterval秒后,"""
    pgie_inteval: builtins.int
    """才可以继续根据判断条件上报
    推理间隔, 每隔pgieInteval秒, 推理一次
    """
    window_len: builtins.int
    """告警长度"""
    window_hit: builtins.int
    """告警灵敏   winLen=5; winHit=2; 说明: 5次推理后,"""
    crowd_num_threshold: builtins.int
    """其中3次满足告警条件, 则触发告警

    人群聚集数量阈值
    """
    faceqa_threshold: builtins.float
    """人脸质量阈值"""
    def __init__(
        self,
        *,
        task_type: global___TaskTypeEnum.ValueType = ...,
        roi: proto.alg_core.common_pb2.Area | None = ...,
        box_min_w: builtins.int = ...,
        box_min_h: builtins.int = ...,
        det_threshold: builtins.float = ...,
        match_threshold: builtins.float = ...,
        alarm_interval: builtins.int = ...,
        pgie_inteval: builtins.int = ...,
        window_len: builtins.int = ...,
        window_hit: builtins.int = ...,
        crowd_num_threshold: builtins.int = ...,
        faceqa_threshold: builtins.float = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["roi", b"roi"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["alarm_interval", b"alarm_interval", "box_min_h", b"box_min_h", "box_min_w", b"box_min_w", "crowd_num_threshold", b"crowd_num_threshold", "det_threshold", b"det_threshold", "faceqa_threshold", b"faceqa_threshold", "match_threshold", b"match_threshold", "pgie_inteval", b"pgie_inteval", "roi", b"roi", "task_type", b"task_type", "window_hit", b"window_hit", "window_len", b"window_len"]) -> None: ...

global___ChanServiceConfig = ChanServiceConfig

@typing_extensions.final
class BindChanTaskReq(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SERVICE_ID_FIELD_NUMBER: builtins.int
    CHANNEL_ID_FIELD_NUMBER: builtins.int
    CHANNEL_NAME_FIELD_NUMBER: builtins.int
    CONFIG_FIELD_NUMBER: builtins.int
    service_id: builtins.int
    channel_id: builtins.int
    channel_name: builtins.str
    config: builtins.str
    """这个json是算法参数，由算法直接解析"""
    def __init__(
        self,
        *,
        service_id: builtins.int = ...,
        channel_id: builtins.int = ...,
        channel_name: builtins.str = ...,
        config: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["channel_id", b"channel_id", "channel_name", b"channel_name", "config", b"config", "service_id", b"service_id"]) -> None: ...

global___BindChanTaskReq = BindChanTaskReq

@typing_extensions.final
class UnbindChanTaskReq(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SERVICE_ID_FIELD_NUMBER: builtins.int
    CHANNEL_ID_FIELD_NUMBER: builtins.int
    service_id: builtins.int
    channel_id: builtins.int
    def __init__(
        self,
        *,
        service_id: builtins.int = ...,
        channel_id: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["channel_id", b"channel_id", "service_id", b"service_id"]) -> None: ...

global___UnbindChanTaskReq = UnbindChanTaskReq

@typing_extensions.final
class Event(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    EVENT_TYPE_FIELD_NUMBER: builtins.int
    CHANNEL_ID_FIELD_NUMBER: builtins.int
    SRCS_FIELD_NUMBER: builtins.int
    TRAINS_FIELD_NUMBER: builtins.int
    ROIS_FIELD_NUMBER: builtins.int
    BOX_FIELD_NUMBER: builtins.int
    PROPERTY_FIELD_NUMBER: builtins.int
    TASK_ID_FIELD_NUMBER: builtins.int
    PIC_TYPE_FIELD_NUMBER: builtins.int
    event_type: global___EventType.ValueType
    channel_id: builtins.int
    @property
    def srcs(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.bytes]: ...
    @property
    def trains(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.bytes]: ...
    @property
    def rois(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.bytes]: ...
    @property
    def box(self) -> proto.alg_core.common_pb2.Box: ...
    property: builtins.str
    """json data to string"""
    task_id: global___TaskTypeEnum.ValueType
    pic_type: proto.alg_core.picture_pb2.PictureType.ValueType
    def __init__(
        self,
        *,
        event_type: global___EventType.ValueType = ...,
        channel_id: builtins.int = ...,
        srcs: collections.abc.Iterable[builtins.bytes] | None = ...,
        trains: collections.abc.Iterable[builtins.bytes] | None = ...,
        rois: collections.abc.Iterable[builtins.bytes] | None = ...,
        box: proto.alg_core.common_pb2.Box | None = ...,
        property: builtins.str = ...,
        task_id: global___TaskTypeEnum.ValueType = ...,
        pic_type: proto.alg_core.picture_pb2.PictureType.ValueType = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["box", b"box"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["box", b"box", "channel_id", b"channel_id", "event_type", b"event_type", "pic_type", b"pic_type", "property", b"property", "rois", b"rois", "srcs", b"srcs", "task_id", b"task_id", "trains", b"trains"]) -> None: ...

global___Event = Event
